//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.02.21 at 09:49:19 PM AEDT 
//


package com.mentor.harness.schema.bridgesharness;

import javax.xml.namespace.QName;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.mentor.harness.schema.bridgesharness package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _BundleRegionTypeProperty_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "property");
    private final static QName _BundleRegionTypeVariant_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "variant");
    private final static QName _BundleRegionTypeFunctionalvariant_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "functionalvariant");
    private final static QName _BundleRegionTypeProductionvariant_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "productionvariant");
    private final static QName _BundleRegionTypeRefedmodule_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "refedmodule");
    private final static QName _BundleRegionTypeStartLocation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "startLocation");
    private final static QName _BundleRegionTypeEndLocation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "endLocation");
    private final static QName _BundleRegionTypeRoute_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "route");
    private final static QName _BundleRegionTypeRoutenode_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "routenode");
    private final static QName _FixingTypeLocation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "Location");
    private final static QName _FixingTypeAddpart_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "addpart");
    private final static QName _FixingTypeRotation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "rotation");
    private final static QName _FixingTypeAlignment_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "alignment");
    private final static QName _FixingTypePosition_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "position");
    private final static QName _BundleLocationTypeBundleLocation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "bundleLocation");
    private final static QName _BundleLocationTypeVariantLocation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "variantLocation");
    private final static QName _BundleLocationTypeFunctionalvariantlocation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "functionalvariantlocation");
    private final static QName _BundleLocationTypeProductionvariantlocation_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "productionvariantlocation");
    private final static QName _NodeTypePosition_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "Position");
    private final static QName _NodeTypePlanarPosition_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "PlanarPosition");
    private final static QName _NodeTypeHarnesslevel_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "harnesslevel");
    private final static QName _ConnectorPinTypeSeal_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "seal");
    private final static QName _ConnectorPinTypeContact_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "contact");
    private final static QName _ConnectorPinTypeCavitydetail_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "cavitydetail");
    private final static QName _ConnectorPinTypePlug_QNAME = new QName("http://www.mentor.com/harness/Schema/bridgesharness", "plug");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.mentor.harness.schema.bridgesharness
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Harnessdesign }
     * 
     */
    public Harnessdesign createHarnessdesign() {
        return new Harnessdesign();
    }

    /**
     * Create an instance of {@link MessageMappingType }
     * 
     */
    public MessageMappingType createMessageMappingType() {
        return new MessageMappingType();
    }

    /**
     * Create an instance of {@link SignalMappingType }
     * 
     */
    public SignalMappingType createSignalMappingType() {
        return new SignalMappingType();
    }

    /**
     * Create an instance of {@link CarrierType }
     * 
     */
    public CarrierType createCarrierType() {
        return new CarrierType();
    }

    /**
     * Create an instance of {@link ClusterType }
     * 
     */
    public ClusterType createClusterType() {
        return new ClusterType();
    }

    /**
     * Create an instance of {@link MessageType }
     * 
     */
    public MessageType createMessageType() {
        return new MessageType();
    }

    /**
     * Create an instance of {@link SignalType }
     * 
     */
    public SignalType createSignalType() {
        return new SignalType();
    }

    /**
     * Create an instance of {@link FunctionType }
     * 
     */
    public FunctionType createFunctionType() {
        return new FunctionType();
    }

    /**
     * Create an instance of {@link SpecializedConnectorType }
     * 
     */
    public SpecializedConnectorType createSpecializedConnectorType() {
        return new SpecializedConnectorType();
    }

    /**
     * Create an instance of {@link Harnessdesign.Productionmodulecodehierarchy }
     * 
     */
    public Harnessdesign.Productionmodulecodehierarchy createHarnessdesignProductionmodulecodehierarchy() {
        return new Harnessdesign.Productionmodulecodehierarchy();
    }

    /**
     * Create an instance of {@link Wiringdesign }
     * 
     */
    public Wiringdesign createWiringdesign() {
        return new Wiringdesign();
    }

    /**
     * Create an instance of {@link SourceFileType }
     * 
     */
    public SourceFileType createSourceFileType() {
        return new SourceFileType();
    }

    /**
     * Create an instance of {@link BaseOptionSetType }
     * 
     */
    public BaseOptionSetType createBaseOptionSetType() {
        return new BaseOptionSetType();
    }

    /**
     * Create an instance of {@link Harnessdesign.Modulecodeset }
     * 
     */
    public Harnessdesign.Modulecodeset createHarnessdesignModulecodeset() {
        return new Harnessdesign.Modulecodeset();
    }

    /**
     * Create an instance of {@link Harnessdesign.Plane }
     * 
     */
    public Harnessdesign.Plane createHarnessdesignPlane() {
        return new Harnessdesign.Plane();
    }

    /**
     * Create an instance of {@link HarnessDataType }
     * 
     */
    public HarnessDataType createHarnessDataType() {
        return new HarnessDataType();
    }

    /**
     * Create an instance of {@link WiringDesignType }
     * 
     */
    public WiringDesignType createWiringDesignType() {
        return new WiringDesignType();
    }

    /**
     * Create an instance of {@link ConstraintsElementType }
     * 
     */
    public ConstraintsElementType createConstraintsElementType() {
        return new ConstraintsElementType();
    }

    /**
     * Create an instance of {@link Fault }
     * 
     */
    public Fault createFault() {
        return new Fault();
    }

    /**
     * Create an instance of {@link BaseCavityComponentType }
     * 
     */
    public BaseCavityComponentType createBaseCavityComponentType() {
        return new BaseCavityComponentType();
    }

    /**
     * Create an instance of {@link CavityComponentType }
     * 
     */
    public CavityComponentType createCavityComponentType() {
        return new CavityComponentType();
    }

    /**
     * Create an instance of {@link WireCombinationType }
     * 
     */
    public WireCombinationType createWireCombinationType() {
        return new WireCombinationType();
    }

    /**
     * Create an instance of {@link CavityDetailType }
     * 
     */
    public CavityDetailType createCavityDetailType() {
        return new CavityDetailType();
    }

    /**
     * Create an instance of {@link AdditionalComponentType }
     * 
     */
    public AdditionalComponentType createAdditionalComponentType() {
        return new AdditionalComponentType();
    }

    /**
     * Create an instance of {@link VariantElementType }
     * 
     */
    public VariantElementType createVariantElementType() {
        return new VariantElementType();
    }

    /**
     * Create an instance of {@link CavityType }
     * 
     */
    public CavityType createCavityType() {
        return new CavityType();
    }

    /**
     * Create an instance of {@link ConnectorRouteType }
     * 
     */
    public ConnectorRouteType createConnectorRouteType() {
        return new ConnectorRouteType();
    }

    /**
     * Create an instance of {@link ShellType }
     * 
     */
    public ShellType createShellType() {
        return new ShellType();
    }

    /**
     * Create an instance of {@link CavityPinType }
     * 
     */
    public CavityPinType createCavityPinType() {
        return new CavityPinType();
    }

    /**
     * Create an instance of {@link ConnectorPinType }
     * 
     */
    public ConnectorPinType createConnectorPinType() {
        return new ConnectorPinType();
    }

    /**
     * Create an instance of {@link ConnectorType }
     * 
     */
    public ConnectorType createConnectorType() {
        return new ConnectorType();
    }

    /**
     * Create an instance of {@link MLCWireEndType }
     * 
     */
    public MLCWireEndType createMLCWireEndType() {
        return new MLCWireEndType();
    }

    /**
     * Create an instance of {@link MLCLocationType }
     * 
     */
    public MLCLocationType createMLCLocationType() {
        return new MLCLocationType();
    }

    /**
     * Create an instance of {@link BaseMLCType }
     * 
     */
    public BaseMLCType createBaseMLCType() {
        return new BaseMLCType();
    }

    /**
     * Create an instance of {@link MLCType }
     * 
     */
    public MLCType createMLCType() {
        return new MLCType();
    }

    /**
     * Create an instance of {@link CriticalDimensionElementType }
     * 
     */
    public CriticalDimensionElementType createCriticalDimensionElementType() {
        return new CriticalDimensionElementType();
    }

    /**
     * Create an instance of {@link DeviceType }
     * 
     */
    public DeviceType createDeviceType() {
        return new DeviceType();
    }

    /**
     * Create an instance of {@link HarnessMulticoreEndType }
     * 
     */
    public HarnessMulticoreEndType createHarnessMulticoreEndType() {
        return new HarnessMulticoreEndType();
    }

    /**
     * Create an instance of {@link MulticoreType }
     * 
     */
    public MulticoreType createMulticoreType() {
        return new MulticoreType();
    }

    /**
     * Create an instance of {@link HarnessAssemblyType }
     * 
     */
    public HarnessAssemblyType createHarnessAssemblyType() {
        return new HarnessAssemblyType();
    }

    /**
     * Create an instance of {@link DerivativeType }
     * 
     */
    public DerivativeType createDerivativeType() {
        return new DerivativeType();
    }

    /**
     * Create an instance of {@link ModuleType }
     * 
     */
    public ModuleType createModuleType() {
        return new ModuleType();
    }

    /**
     * Create an instance of {@link SpliceType }
     * 
     */
    public SpliceType createSpliceType() {
        return new SpliceType();
    }

    /**
     * Create an instance of {@link MulticoreMarkerType }
     * 
     */
    public MulticoreMarkerType createMulticoreMarkerType() {
        return new MulticoreMarkerType();
    }

    /**
     * Create an instance of {@link WireMarkerType }
     * 
     */
    public WireMarkerType createWireMarkerType() {
        return new WireMarkerType();
    }

    /**
     * Create an instance of {@link HarnessWireEndType }
     * 
     */
    public HarnessWireEndType createHarnessWireEndType() {
        return new HarnessWireEndType();
    }

    /**
     * Create an instance of {@link HarnessWireType }
     * 
     */
    public HarnessWireType createHarnessWireType() {
        return new HarnessWireType();
    }

    /**
     * Create an instance of {@link CenterStripSpliceType }
     * 
     */
    public CenterStripSpliceType createCenterStripSpliceType() {
        return new CenterStripSpliceType();
    }

    /**
     * Create an instance of {@link HarnessShieldType }
     * 
     */
    public HarnessShieldType createHarnessShieldType() {
        return new HarnessShieldType();
    }

    /**
     * Create an instance of {@link BundleJunctionInfoType }
     * 
     */
    public BundleJunctionInfoType createBundleJunctionInfoType() {
        return new BundleJunctionInfoType();
    }

    /**
     * Create an instance of {@link BundleType }
     * 
     */
    public BundleType createBundleType() {
        return new BundleType();
    }

    /**
     * Create an instance of {@link SegmentsType }
     * 
     */
    public SegmentsType createSegmentsType() {
        return new SegmentsType();
    }

    /**
     * Create an instance of {@link WayPointType }
     * 
     */
    public WayPointType createWayPointType() {
        return new WayPointType();
    }

    /**
     * Create an instance of {@link BundleSegmentType }
     * 
     */
    public BundleSegmentType createBundleSegmentType() {
        return new BundleSegmentType();
    }

    /**
     * Create an instance of {@link NodeType }
     * 
     */
    public NodeType createNodeType() {
        return new NodeType();
    }

    /**
     * Create an instance of {@link BundleLocationType }
     * 
     */
    public BundleLocationType createBundleLocationType() {
        return new BundleLocationType();
    }

    /**
     * Create an instance of {@link VariantOffsetPointType }
     * 
     */
    public VariantOffsetPointType createVariantOffsetPointType() {
        return new VariantOffsetPointType();
    }

    /**
     * Create an instance of {@link BundleOffsetPointType }
     * 
     */
    public BundleOffsetPointType createBundleOffsetPointType() {
        return new BundleOffsetPointType();
    }

    /**
     * Create an instance of {@link ThroughBundleType }
     * 
     */
    public ThroughBundleType createThroughBundleType() {
        return new ThroughBundleType();
    }

    /**
     * Create an instance of {@link ThroughNodeType }
     * 
     */
    public ThroughNodeType createThroughNodeType() {
        return new ThroughNodeType();
    }

    /**
     * Create an instance of {@link FixingType }
     * 
     */
    public FixingType createFixingType() {
        return new FixingType();
    }

    /**
     * Create an instance of {@link BundleRegionType }
     * 
     */
    public BundleRegionType createBundleRegionType() {
        return new BundleRegionType();
    }

    /**
     * Create an instance of {@link ProtectionType }
     * 
     */
    public ProtectionType createProtectionType() {
        return new ProtectionType();
    }

    /**
     * Create an instance of {@link OtherComponentType }
     * 
     */
    public OtherComponentType createOtherComponentType() {
        return new OtherComponentType();
    }

    /**
     * Create an instance of {@link CartesianPointType }
     * 
     */
    public CartesianPointType createCartesianPointType() {
        return new CartesianPointType();
    }

    /**
     * Create an instance of {@link Cartesian3DCoordinate }
     * 
     */
    public Cartesian3DCoordinate createCartesian3DCoordinate() {
        return new Cartesian3DCoordinate();
    }

    /**
     * Create an instance of {@link PlaneType }
     * 
     */
    public PlaneType createPlaneType() {
        return new PlaneType();
    }

    /**
     * Create an instance of {@link BundleAssociationType }
     * 
     */
    public BundleAssociationType createBundleAssociationType() {
        return new BundleAssociationType();
    }

    /**
     * Create an instance of {@link InsulationRunType }
     * 
     */
    public InsulationRunType createInsulationRunType() {
        return new InsulationRunType();
    }

    /**
     * Create an instance of {@link FlatteningConstraintElementType }
     * 
     */
    public FlatteningConstraintElementType createFlatteningConstraintElementType() {
        return new FlatteningConstraintElementType();
    }

    /**
     * Create an instance of {@link ConstraintParameterType }
     * 
     */
    public ConstraintParameterType createConstraintParameterType() {
        return new ConstraintParameterType();
    }

    /**
     * Create an instance of {@link BridgesBaseDocumentSchemaInfo }
     * 
     */
    public BridgesBaseDocumentSchemaInfo createBridgesBaseDocumentSchemaInfo() {
        return new BridgesBaseDocumentSchemaInfo();
    }

    /**
     * Create an instance of {@link SchemaInfo }
     * 
     */
    public SchemaInfo createSchemaInfo() {
        return new SchemaInfo();
    }

    /**
     * Create an instance of {@link BasePropertyType }
     * 
     */
    public BasePropertyType createBasePropertyType() {
        return new BasePropertyType();
    }

    /**
     * Create an instance of {@link HarnessLevelType }
     * 
     */
    public HarnessLevelType createHarnessLevelType() {
        return new HarnessLevelType();
    }

    /**
     * Create an instance of {@link BaseVarianceType }
     * 
     */
    public BaseVarianceType createBaseVarianceType() {
        return new BaseVarianceType();
    }

    /**
     * Create an instance of {@link FunctionalVariantType }
     * 
     */
    public FunctionalVariantType createFunctionalVariantType() {
        return new FunctionalVariantType();
    }

    /**
     * Create an instance of {@link ProductionVariantType }
     * 
     */
    public ProductionVariantType createProductionVariantType() {
        return new ProductionVariantType();
    }

    /**
     * Create an instance of {@link BaseReferredModuleType }
     * 
     */
    public BaseReferredModuleType createBaseReferredModuleType() {
        return new BaseReferredModuleType();
    }

    /**
     * Create an instance of {@link BaseConnectivitySchemaInfo }
     * 
     */
    public BaseConnectivitySchemaInfo createBaseConnectivitySchemaInfo() {
        return new BaseConnectivitySchemaInfo();
    }

    /**
     * Create an instance of {@link BaseCenterstripspliceType }
     * 
     */
    public BaseCenterstripspliceType createBaseCenterstripspliceType() {
        return new BaseCenterstripspliceType();
    }

    /**
     * Create an instance of {@link BaseConnectionType }
     * 
     */
    public BaseConnectionType createBaseConnectionType() {
        return new BaseConnectionType();
    }

    /**
     * Create an instance of {@link BaseWireConnectionType }
     * 
     */
    public BaseWireConnectionType createBaseWireConnectionType() {
        return new BaseWireConnectionType();
    }

    /**
     * Create an instance of {@link BaseShieldConnectionType }
     * 
     */
    public BaseShieldConnectionType createBaseShieldConnectionType() {
        return new BaseShieldConnectionType();
    }

    /**
     * Create an instance of {@link BaseConnectorType }
     * 
     */
    public BaseConnectorType createBaseConnectorType() {
        return new BaseConnectorType();
    }

    /**
     * Create an instance of {@link BaseDeviceType }
     * 
     */
    public BaseDeviceType createBaseDeviceType() {
        return new BaseDeviceType();
    }

    /**
     * Create an instance of {@link BaseMemberType }
     * 
     */
    public BaseMemberType createBaseMemberType() {
        return new BaseMemberType();
    }

    /**
     * Create an instance of {@link BaseMulticoreType }
     * 
     */
    public BaseMulticoreType createBaseMulticoreType() {
        return new BaseMulticoreType();
    }

    /**
     * Create an instance of {@link BaseNetType }
     * 
     */
    public BaseNetType createBaseNetType() {
        return new BaseNetType();
    }

    /**
     * Create an instance of {@link ConnectedPinType }
     * 
     */
    public ConnectedPinType createConnectedPinType() {
        return new ConnectedPinType();
    }

    /**
     * Create an instance of {@link BasePinType }
     * 
     */
    public BasePinType createBasePinType() {
        return new BasePinType();
    }

    /**
     * Create an instance of {@link BaseShieldType }
     * 
     */
    public BaseShieldType createBaseShieldType() {
        return new BaseShieldType();
    }

    /**
     * Create an instance of {@link BaseSpliceType }
     * 
     */
    public BaseSpliceType createBaseSpliceType() {
        return new BaseSpliceType();
    }

    /**
     * Create an instance of {@link BaseWireType }
     * 
     */
    public BaseWireType createBaseWireType() {
        return new BaseWireType();
    }

    /**
     * Create an instance of {@link BaseDesignType }
     * 
     */
    public BaseDesignType createBaseDesignType() {
        return new BaseDesignType();
    }

    /**
     * Create an instance of {@link BaseScopeSetType }
     * 
     */
    public BaseScopeSetType createBaseScopeSetType() {
        return new BaseScopeSetType();
    }

    /**
     * Create an instance of {@link BaseOptionType }
     * 
     */
    public BaseOptionType createBaseOptionType() {
        return new BaseOptionType();
    }

    /**
     * Create an instance of {@link BaseScopeType }
     * 
     */
    public BaseScopeType createBaseScopeType() {
        return new BaseScopeType();
    }

    /**
     * Create an instance of {@link BaseOptionRefType }
     * 
     */
    public BaseOptionRefType createBaseOptionRefType() {
        return new BaseOptionRefType();
    }

    /**
     * Create an instance of {@link BaseModuleCodeSetType }
     * 
     */
    public BaseModuleCodeSetType createBaseModuleCodeSetType() {
        return new BaseModuleCodeSetType();
    }

    /**
     * Create an instance of {@link BaseExclusiveModuleCodeType }
     * 
     */
    public BaseExclusiveModuleCodeType createBaseExclusiveModuleCodeType() {
        return new BaseExclusiveModuleCodeType();
    }

    /**
     * Create an instance of {@link BaseInclusiveModuleCodeType }
     * 
     */
    public BaseInclusiveModuleCodeType createBaseInclusiveModuleCodeType() {
        return new BaseInclusiveModuleCodeType();
    }

    /**
     * Create an instance of {@link BaseInclusiveModuleCodeGroupType }
     * 
     */
    public BaseInclusiveModuleCodeGroupType createBaseInclusiveModuleCodeGroupType() {
        return new BaseInclusiveModuleCodeGroupType();
    }

    /**
     * Create an instance of {@link BaseModuleCodeType }
     * 
     */
    public BaseModuleCodeType createBaseModuleCodeType() {
        return new BaseModuleCodeType();
    }

    /**
     * Create an instance of {@link BaseVariantModuleCodeType }
     * 
     */
    public BaseVariantModuleCodeType createBaseVariantModuleCodeType() {
        return new BaseVariantModuleCodeType();
    }

    /**
     * Create an instance of {@link BaseModuleCodeRefType }
     * 
     */
    public BaseModuleCodeRefType createBaseModuleCodeRefType() {
        return new BaseModuleCodeRefType();
    }

    /**
     * Create an instance of {@link ConnectionType }
     * 
     */
    public ConnectionType createConnectionType() {
        return new ConnectionType();
    }

    /**
     * Create an instance of {@link BackshellType }
     * 
     */
    public BackshellType createBackshellType() {
        return new BackshellType();
    }

    /**
     * Create an instance of {@link ConnectorRefinementType }
     * 
     */
    public ConnectorRefinementType createConnectorRefinementType() {
        return new ConnectorRefinementType();
    }

    /**
     * Create an instance of {@link MatingType }
     * 
     */
    public MatingType createMatingType() {
        return new MatingType();
    }

    /**
     * Create an instance of {@link SpecializedPinType }
     * 
     */
    public SpecializedPinType createSpecializedPinType() {
        return new SpecializedPinType();
    }

    /**
     * Create an instance of {@link MemberType }
     * 
     */
    public MemberType createMemberType() {
        return new MemberType();
    }

    /**
     * Create an instance of {@link InterconnectMemberType }
     * 
     */
    public InterconnectMemberType createInterconnectMemberType() {
        return new InterconnectMemberType();
    }

    /**
     * Create an instance of {@link AssemblyMemberType }
     * 
     */
    public AssemblyMemberType createAssemblyMemberType() {
        return new AssemblyMemberType();
    }

    /**
     * Create an instance of {@link OverbraidPinType }
     * 
     */
    public OverbraidPinType createOverbraidPinType() {
        return new OverbraidPinType();
    }

    /**
     * Create an instance of {@link NetType }
     * 
     */
    public NetType createNetType() {
        return new NetType();
    }

    /**
     * Create an instance of {@link PinType }
     * 
     */
    public PinType createPinType() {
        return new PinType();
    }

    /**
     * Create an instance of {@link DevicePinType }
     * 
     */
    public DevicePinType createDevicePinType() {
        return new DevicePinType();
    }

    /**
     * Create an instance of {@link PropertyType }
     * 
     */
    public PropertyType createPropertyType() {
        return new PropertyType();
    }

    /**
     * Create an instance of {@link ShieldType }
     * 
     */
    public ShieldType createShieldType() {
        return new ShieldType();
    }

    /**
     * Create an instance of {@link WireType }
     * 
     */
    public WireType createWireType() {
        return new WireType();
    }

    /**
     * Create an instance of {@link AssemblyType }
     * 
     */
    public AssemblyType createAssemblyType() {
        return new AssemblyType();
    }

    /**
     * Create an instance of {@link InterconnectConductorType }
     * 
     */
    public InterconnectConductorType createInterconnectConductorType() {
        return new InterconnectConductorType();
    }

    /**
     * Create an instance of {@link PortType }
     * 
     */
    public PortType createPortType() {
        return new PortType();
    }

    /**
     * Create an instance of {@link SignalConnectionType }
     * 
     */
    public SignalConnectionType createSignalConnectionType() {
        return new SignalConnectionType();
    }

    /**
     * Create an instance of {@link ExtendedAttributeType }
     * 
     */
    public ExtendedAttributeType createExtendedAttributeType() {
        return new ExtendedAttributeType();
    }

    /**
     * Create an instance of {@link InterfaceType }
     * 
     */
    public InterfaceType createInterfaceType() {
        return new InterfaceType();
    }

    /**
     * Create an instance of {@link MessageMappingType.Intref }
     * 
     */
    public MessageMappingType.Intref createMessageMappingTypeIntref() {
        return new MessageMappingType.Intref();
    }

    /**
     * Create an instance of {@link SignalMappingType.Intref }
     * 
     */
    public SignalMappingType.Intref createSignalMappingTypeIntref() {
        return new SignalMappingType.Intref();
    }

    /**
     * Create an instance of {@link CarrierType.Interfaceref }
     * 
     */
    public CarrierType.Interfaceref createCarrierTypeInterfaceref() {
        return new CarrierType.Interfaceref();
    }

    /**
     * Create an instance of {@link ClusterType.Clusterfunction }
     * 
     */
    public ClusterType.Clusterfunction createClusterTypeClusterfunction() {
        return new ClusterType.Clusterfunction();
    }

    /**
     * Create an instance of {@link ClusterType.Interface }
     * 
     */
    public ClusterType.Interface createClusterTypeInterface() {
        return new ClusterType.Interface();
    }

    /**
     * Create an instance of {@link MessageType.Connection }
     * 
     */
    public MessageType.Connection createMessageTypeConnection() {
        return new MessageType.Connection();
    }

    /**
     * Create an instance of {@link MessageType.Extendedattribute }
     * 
     */
    public MessageType.Extendedattribute createMessageTypeExtendedattribute() {
        return new MessageType.Extendedattribute();
    }

    /**
     * Create an instance of {@link SignalType.Connection }
     * 
     */
    public SignalType.Connection createSignalTypeConnection() {
        return new SignalType.Connection();
    }

    /**
     * Create an instance of {@link SignalType.Extendedattribute }
     * 
     */
    public SignalType.Extendedattribute createSignalTypeExtendedattribute() {
        return new SignalType.Extendedattribute();
    }

    /**
     * Create an instance of {@link FunctionType.Port }
     * 
     */
    public FunctionType.Port createFunctionTypePort() {
        return new FunctionType.Port();
    }

    /**
     * Create an instance of {@link SpecializedConnectorType.Pin }
     * 
     */
    public SpecializedConnectorType.Pin createSpecializedConnectorTypePin() {
        return new SpecializedConnectorType.Pin();
    }

    /**
     * Create an instance of {@link Harnessdesign.Productionmodulecodehierarchy.Modulecodehierarchy }
     * 
     */
    public Harnessdesign.Productionmodulecodehierarchy.Modulecodehierarchy createHarnessdesignProductionmodulecodehierarchyModulecodehierarchy() {
        return new Harnessdesign.Productionmodulecodehierarchy.Modulecodehierarchy();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "property", scope = BundleRegionType.class)
    public JAXBElement<BasePropertyType> createBundleRegionTypeProperty(BasePropertyType value) {
        return new JAXBElement<BasePropertyType>(_BundleRegionTypeProperty_QNAME, BasePropertyType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "variant", scope = BundleRegionType.class)
    public JAXBElement<BaseVarianceType> createBundleRegionTypeVariant(BaseVarianceType value) {
        return new JAXBElement<BaseVarianceType>(_BundleRegionTypeVariant_QNAME, BaseVarianceType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "functionalvariant", scope = BundleRegionType.class)
    public JAXBElement<FunctionalVariantType> createBundleRegionTypeFunctionalvariant(FunctionalVariantType value) {
        return new JAXBElement<FunctionalVariantType>(_BundleRegionTypeFunctionalvariant_QNAME, FunctionalVariantType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "productionvariant", scope = BundleRegionType.class)
    public JAXBElement<ProductionVariantType> createBundleRegionTypeProductionvariant(ProductionVariantType value) {
        return new JAXBElement<ProductionVariantType>(_BundleRegionTypeProductionvariant_QNAME, ProductionVariantType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "refedmodule", scope = BundleRegionType.class)
    public JAXBElement<BaseReferredModuleType> createBundleRegionTypeRefedmodule(BaseReferredModuleType value) {
        return new JAXBElement<BaseReferredModuleType>(_BundleRegionTypeRefedmodule_QNAME, BaseReferredModuleType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BundleLocationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BundleLocationType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "startLocation", scope = BundleRegionType.class)
    public JAXBElement<BundleLocationType> createBundleRegionTypeStartLocation(BundleLocationType value) {
        return new JAXBElement<BundleLocationType>(_BundleRegionTypeStartLocation_QNAME, BundleLocationType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BundleLocationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BundleLocationType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "endLocation", scope = BundleRegionType.class)
    public JAXBElement<BundleLocationType> createBundleRegionTypeEndLocation(BundleLocationType value) {
        return new JAXBElement<BundleLocationType>(_BundleRegionTypeEndLocation_QNAME, BundleLocationType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ThroughBundleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ThroughBundleType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "route", scope = BundleRegionType.class)
    public JAXBElement<ThroughBundleType> createBundleRegionTypeRoute(ThroughBundleType value) {
        return new JAXBElement<ThroughBundleType>(_BundleRegionTypeRoute_QNAME, ThroughBundleType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ThroughNodeType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ThroughNodeType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "routenode", scope = BundleRegionType.class)
    public JAXBElement<ThroughNodeType> createBundleRegionTypeRoutenode(ThroughNodeType value) {
        return new JAXBElement<ThroughNodeType>(_BundleRegionTypeRoutenode_QNAME, ThroughNodeType.class, BundleRegionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "property", scope = FixingType.class)
    public JAXBElement<BasePropertyType> createFixingTypeProperty(BasePropertyType value) {
        return new JAXBElement<BasePropertyType>(_BundleRegionTypeProperty_QNAME, BasePropertyType.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "variant", scope = FixingType.class)
    public JAXBElement<BaseVarianceType> createFixingTypeVariant(BaseVarianceType value) {
        return new JAXBElement<BaseVarianceType>(_BundleRegionTypeVariant_QNAME, BaseVarianceType.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "functionalvariant", scope = FixingType.class)
    public JAXBElement<FunctionalVariantType> createFixingTypeFunctionalvariant(FunctionalVariantType value) {
        return new JAXBElement<FunctionalVariantType>(_BundleRegionTypeFunctionalvariant_QNAME, FunctionalVariantType.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "productionvariant", scope = FixingType.class)
    public JAXBElement<ProductionVariantType> createFixingTypeProductionvariant(ProductionVariantType value) {
        return new JAXBElement<ProductionVariantType>(_BundleRegionTypeProductionvariant_QNAME, ProductionVariantType.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "refedmodule", scope = FixingType.class)
    public JAXBElement<BaseReferredModuleType> createFixingTypeRefedmodule(BaseReferredModuleType value) {
        return new JAXBElement<BaseReferredModuleType>(_BundleRegionTypeRefedmodule_QNAME, BaseReferredModuleType.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BundleLocationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BundleLocationType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "Location", scope = FixingType.class)
    public JAXBElement<BundleLocationType> createFixingTypeLocation(BundleLocationType value) {
        return new JAXBElement<BundleLocationType>(_FixingTypeLocation_QNAME, BundleLocationType.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdditionalComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AdditionalComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "addpart", scope = FixingType.class)
    public JAXBElement<AdditionalComponentType> createFixingTypeAddpart(AdditionalComponentType value) {
        return new JAXBElement<AdditionalComponentType>(_FixingTypeAddpart_QNAME, AdditionalComponentType.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Cartesian3DCoordinate }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Cartesian3DCoordinate }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "rotation", scope = FixingType.class)
    public JAXBElement<Cartesian3DCoordinate> createFixingTypeRotation(Cartesian3DCoordinate value) {
        return new JAXBElement<Cartesian3DCoordinate>(_FixingTypeRotation_QNAME, Cartesian3DCoordinate.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Cartesian3DCoordinate }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Cartesian3DCoordinate }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "alignment", scope = FixingType.class)
    public JAXBElement<Cartesian3DCoordinate> createFixingTypeAlignment(Cartesian3DCoordinate value) {
        return new JAXBElement<Cartesian3DCoordinate>(_FixingTypeAlignment_QNAME, Cartesian3DCoordinate.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Cartesian3DCoordinate }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Cartesian3DCoordinate }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "position", scope = FixingType.class)
    public JAXBElement<Cartesian3DCoordinate> createFixingTypePosition(Cartesian3DCoordinate value) {
        return new JAXBElement<Cartesian3DCoordinate>(_FixingTypePosition_QNAME, Cartesian3DCoordinate.class, FixingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "property", scope = BundleLocationType.class)
    public JAXBElement<BasePropertyType> createBundleLocationTypeProperty(BasePropertyType value) {
        return new JAXBElement<BasePropertyType>(_BundleRegionTypeProperty_QNAME, BasePropertyType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "variant", scope = BundleLocationType.class)
    public JAXBElement<BaseVarianceType> createBundleLocationTypeVariant(BaseVarianceType value) {
        return new JAXBElement<BaseVarianceType>(_BundleRegionTypeVariant_QNAME, BaseVarianceType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "functionalvariant", scope = BundleLocationType.class)
    public JAXBElement<FunctionalVariantType> createBundleLocationTypeFunctionalvariant(FunctionalVariantType value) {
        return new JAXBElement<FunctionalVariantType>(_BundleRegionTypeFunctionalvariant_QNAME, FunctionalVariantType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "productionvariant", scope = BundleLocationType.class)
    public JAXBElement<ProductionVariantType> createBundleLocationTypeProductionvariant(ProductionVariantType value) {
        return new JAXBElement<ProductionVariantType>(_BundleRegionTypeProductionvariant_QNAME, ProductionVariantType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "refedmodule", scope = BundleLocationType.class)
    public JAXBElement<BaseReferredModuleType> createBundleLocationTypeRefedmodule(BaseReferredModuleType value) {
        return new JAXBElement<BaseReferredModuleType>(_BundleRegionTypeRefedmodule_QNAME, BaseReferredModuleType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BundleOffsetPointType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BundleOffsetPointType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "bundleLocation", scope = BundleLocationType.class)
    public JAXBElement<BundleOffsetPointType> createBundleLocationTypeBundleLocation(BundleOffsetPointType value) {
        return new JAXBElement<BundleOffsetPointType>(_BundleLocationTypeBundleLocation_QNAME, BundleOffsetPointType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariantOffsetPointType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VariantOffsetPointType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "variantLocation", scope = BundleLocationType.class)
    public JAXBElement<VariantOffsetPointType> createBundleLocationTypeVariantLocation(VariantOffsetPointType value) {
        return new JAXBElement<VariantOffsetPointType>(_BundleLocationTypeVariantLocation_QNAME, VariantOffsetPointType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariantOffsetPointType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VariantOffsetPointType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "functionalvariantlocation", scope = BundleLocationType.class)
    public JAXBElement<VariantOffsetPointType> createBundleLocationTypeFunctionalvariantlocation(VariantOffsetPointType value) {
        return new JAXBElement<VariantOffsetPointType>(_BundleLocationTypeFunctionalvariantlocation_QNAME, VariantOffsetPointType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariantOffsetPointType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VariantOffsetPointType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "productionvariantlocation", scope = BundleLocationType.class)
    public JAXBElement<VariantOffsetPointType> createBundleLocationTypeProductionvariantlocation(VariantOffsetPointType value) {
        return new JAXBElement<VariantOffsetPointType>(_BundleLocationTypeProductionvariantlocation_QNAME, VariantOffsetPointType.class, BundleLocationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CartesianPointType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CartesianPointType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "Position", scope = NodeType.class)
    public JAXBElement<CartesianPointType> createNodeTypePosition(CartesianPointType value) {
        return new JAXBElement<CartesianPointType>(_NodeTypePosition_QNAME, CartesianPointType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CartesianPointType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CartesianPointType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "PlanarPosition", scope = NodeType.class)
    public JAXBElement<CartesianPointType> createNodeTypePlanarPosition(CartesianPointType value) {
        return new JAXBElement<CartesianPointType>(_NodeTypePlanarPosition_QNAME, CartesianPointType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HarnessLevelType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link HarnessLevelType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "harnesslevel", scope = NodeType.class)
    public JAXBElement<HarnessLevelType> createNodeTypeHarnesslevel(HarnessLevelType value) {
        return new JAXBElement<HarnessLevelType>(_NodeTypeHarnesslevel_QNAME, HarnessLevelType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BasePropertyType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "property", scope = NodeType.class)
    public JAXBElement<BasePropertyType> createNodeTypeProperty(BasePropertyType value) {
        return new JAXBElement<BasePropertyType>(_BundleRegionTypeProperty_QNAME, BasePropertyType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseVarianceType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "variant", scope = NodeType.class)
    public JAXBElement<BaseVarianceType> createNodeTypeVariant(BaseVarianceType value) {
        return new JAXBElement<BaseVarianceType>(_BundleRegionTypeVariant_QNAME, BaseVarianceType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FunctionalVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "functionalvariant", scope = NodeType.class)
    public JAXBElement<FunctionalVariantType> createNodeTypeFunctionalvariant(FunctionalVariantType value) {
        return new JAXBElement<FunctionalVariantType>(_BundleRegionTypeFunctionalvariant_QNAME, FunctionalVariantType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProductionVariantType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "productionvariant", scope = NodeType.class)
    public JAXBElement<ProductionVariantType> createNodeTypeProductionvariant(ProductionVariantType value) {
        return new JAXBElement<ProductionVariantType>(_BundleRegionTypeProductionvariant_QNAME, ProductionVariantType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseReferredModuleType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "refedmodule", scope = NodeType.class)
    public JAXBElement<BaseReferredModuleType> createNodeTypeRefedmodule(BaseReferredModuleType value) {
        return new JAXBElement<BaseReferredModuleType>(_BundleRegionTypeRefedmodule_QNAME, BaseReferredModuleType.class, NodeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CavityComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CavityComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "seal", scope = ConnectorPinType.class)
    public JAXBElement<CavityComponentType> createConnectorPinTypeSeal(CavityComponentType value) {
        return new JAXBElement<CavityComponentType>(_ConnectorPinTypeSeal_QNAME, CavityComponentType.class, ConnectorPinType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CavityComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CavityComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "contact", scope = ConnectorPinType.class)
    public JAXBElement<CavityComponentType> createConnectorPinTypeContact(CavityComponentType value) {
        return new JAXBElement<CavityComponentType>(_ConnectorPinTypeContact_QNAME, CavityComponentType.class, ConnectorPinType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdditionalComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AdditionalComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "addpart", scope = ConnectorPinType.class)
    public JAXBElement<AdditionalComponentType> createConnectorPinTypeAddpart(AdditionalComponentType value) {
        return new JAXBElement<AdditionalComponentType>(_FixingTypeAddpart_QNAME, AdditionalComponentType.class, ConnectorPinType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CavityDetailType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CavityDetailType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "cavitydetail", scope = ConnectorPinType.class)
    public JAXBElement<CavityDetailType> createConnectorPinTypeCavitydetail(CavityDetailType value) {
        return new JAXBElement<CavityDetailType>(_ConnectorPinTypeCavitydetail_QNAME, CavityDetailType.class, ConnectorPinType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseCavityComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BaseCavityComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.mentor.com/harness/Schema/bridgesharness", name = "plug", scope = ConnectorPinType.class)
    public JAXBElement<BaseCavityComponentType> createConnectorPinTypePlug(BaseCavityComponentType value) {
        return new JAXBElement<BaseCavityComponentType>(_ConnectorPinTypePlug_QNAME, BaseCavityComponentType.class, ConnectorPinType.class, value);
    }

}
