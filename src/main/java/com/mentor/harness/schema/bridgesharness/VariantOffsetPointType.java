//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.02.21 at 09:49:19 PM AEDT 
//


package com.mentor.harness.schema.bridgesharness;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlIDREF;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 *                 Defines a variant position on a bundle using an anchor node and a dimension.
 *             
 * 
 * <p>Java class for VariantOffsetPointType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="VariantOffsetPointType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice&gt;
 *         &lt;group ref="{http://www.mentor.com/harness/Schema/bridgesharness}PropertyGroup"/&gt;
 *       &lt;/choice&gt;
 *       &lt;attribute name="optionexpression" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="anchorRef" use="required" type="{http://www.w3.org/2001/XMLSchema}IDREF" /&gt;
 *       &lt;attribute name="dimension" use="required" type="{http://www.w3.org/2001/XMLSchema}double" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VariantOffsetPointType", propOrder = {
    "property",
    "variant",
    "functionalvariant",
    "productionvariant",
    "refedmodule"
})
public class VariantOffsetPointType {

    protected List<BasePropertyType> property;
    protected List<BaseVarianceType> variant;
    protected List<FunctionalVariantType> functionalvariant;
    protected List<ProductionVariantType> productionvariant;
    protected BaseReferredModuleType refedmodule;
    @XmlAttribute(name = "optionexpression", required = true)
    protected String optionexpression;
    @XmlAttribute(name = "anchorRef", required = true)
    @XmlIDREF
    @XmlSchemaType(name = "IDREF")
    protected Object anchorRef;
    @XmlAttribute(name = "dimension", required = true)
    protected double dimension;

    /**
     * Gets the value of the property property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the property property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BasePropertyType }
     * 
     * 
     */
    public List<BasePropertyType> getProperty() {
        if (property == null) {
            property = new ArrayList<BasePropertyType>();
        }
        return this.property;
    }

    /**
     * Gets the value of the variant property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the variant property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVariant().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BaseVarianceType }
     * 
     * 
     */
    public List<BaseVarianceType> getVariant() {
        if (variant == null) {
            variant = new ArrayList<BaseVarianceType>();
        }
        return this.variant;
    }

    /**
     * Gets the value of the functionalvariant property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the functionalvariant property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFunctionalvariant().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FunctionalVariantType }
     * 
     * 
     */
    public List<FunctionalVariantType> getFunctionalvariant() {
        if (functionalvariant == null) {
            functionalvariant = new ArrayList<FunctionalVariantType>();
        }
        return this.functionalvariant;
    }

    /**
     * Gets the value of the productionvariant property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the productionvariant property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProductionvariant().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProductionVariantType }
     * 
     * 
     */
    public List<ProductionVariantType> getProductionvariant() {
        if (productionvariant == null) {
            productionvariant = new ArrayList<ProductionVariantType>();
        }
        return this.productionvariant;
    }

    /**
     * Gets the value of the refedmodule property.
     * 
     * @return
     *     possible object is
     *     {@link BaseReferredModuleType }
     *     
     */
    public BaseReferredModuleType getRefedmodule() {
        return refedmodule;
    }

    /**
     * Sets the value of the refedmodule property.
     * 
     * @param value
     *     allowed object is
     *     {@link BaseReferredModuleType }
     *     
     */
    public void setRefedmodule(BaseReferredModuleType value) {
        this.refedmodule = value;
    }

    /**
     * Gets the value of the optionexpression property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOptionexpression() {
        return optionexpression;
    }

    /**
     * Sets the value of the optionexpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOptionexpression(String value) {
        this.optionexpression = value;
    }

    /**
     * Gets the value of the anchorRef property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getAnchorRef() {
        return anchorRef;
    }

    /**
     * Sets the value of the anchorRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setAnchorRef(Object value) {
        this.anchorRef = value;
    }

    /**
     * Gets the value of the dimension property.
     * 
     */
    public double getDimension() {
        return dimension;
    }

    /**
     * Sets the value of the dimension property.
     * 
     */
    public void setDimension(double value) {
        this.dimension = value;
    }

}
